version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"                 ## 对外暴露的端口号
    volumes:
      - "/opt/k8s/application/zookeeper/data:/data"
      - "/opt/k8s/application/zookeeper/datalog:/datalog"
  kafka:
    image: wurstmeister/kafka
    volumes:
      - /etc/localtime:/etc/localtime ## 挂载位置（kafka镜像和宿主机器之间时间保持一直）
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 114.67.102.117   ## 修改:宿主机IP
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181       ## 卡夫卡运行是基于zookeeper的
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_HOURS: 120
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DELETE_RETENTION_MS: 1000
  kafka-manager:
    image: sheepkiller/kafka-manager                ## 镜像：开源的web管理kafka集群的界面
    environment:
      ZK_HOSTS: 114.67.102.117                   ## 修改:宿主机IP
    ports:
      - "9000:9000"                                 ## 暴露端口
  #kafka-offset-monitor:
  #  image: 564239555/kafkaoffsetmonitor
  #  volumes:
  #    - /opt/k8s/application/kafka2.4/kafkaoffsetmonitor/conf:/kafkaoffsetmonitor
  #  ports:
  #    - "8089:8089"
  #  environment:
  #    ZK_HOSTS: 114.67.102.117:2181
  #    KAFKA_BROKERS: 114.67.102.117:9092
  #    REFRESH_SECENDS: 10
  #    RETAIN_DAYS: 2

#后台启动命令：docker-compose up -d
#停止命令：docker-compose stop
#停止并删除服务命令：docker-compose down
