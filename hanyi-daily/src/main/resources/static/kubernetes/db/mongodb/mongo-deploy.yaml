apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deploy
  labels:
    name: mongodb-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongodb-pod
  template:
    metadata:
      labels:
        name: mongodb-pod
    spec:
      containers:
        - name: mongodb
          image: mongo:4.2.1
          command:
            - sh
            - -c
            - "exec mongod -f /data/mongodb/conf/mongodb.conf"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
              name: mongodb
              protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 512Mi
          volumeMounts:
            - name: mongodb-config
              mountPath: /data/mongodb/conf/
            - name: data
              mountPath: /data/mongodb/
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: asdzxc789
      volumes:
        - name: mongodb-config
          configMap:
            name: mongodb-conf
        - name: data
          persistentVolumeClaim:
            claimName: mongo-pvc

---
kind: Service
apiVersion: v1
metadata:
  labels:
    name: mongodb
  name: mongodb-service
spec:
  type: NodePort
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
      nodePort: 27017
  selector:
    name: mongodb-pod

#mongo容器在创建之后默认无权限，使用Navicat连接之后再admin数据库中创建用户名和密码，命令如下：
#db.createUser({ user:'admin',pwd:'asdzxc789',roles:[ { role:'userAdminAnyDatabase', db: 'admin'}]});
#db.createUser({ user: "root" , pwd: "asdzxc789", roles: ["root"]});
#创建用户完成之后，在configMap中加上auth=true属性之后，重新启动mongo容器即可完成授权
